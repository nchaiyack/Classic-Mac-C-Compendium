This directory contains the source code for MUDDweller 1.2, a MUD clientfor the Macintosh. This program is written in MPW C++ and uses MacApp2.0.1.In order to compile this program, you will need MPW 3.2 and assortedlibraries, MPW C++ and MacApp 2.0.1. I made the following changesto MacApp in order to gain some additional control over the handlingof low memory conditions and to fix bugs (the files on Programmingcontain the original version):File #1: HardDisk:MPW:MacApp:Libraries:UDebug.inc1.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UDebug.inc1.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UDebug.inc1.p"; Line 1413:1414; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UDebug.inc1.p"; Line 1413:1414)1413	{           pOldexLineF := ProcPtrPtr(exLineF)^;1414	            ProcPtrPtr(exLineF)^ := @XDebugLineF; }1413	            pOldexLineF := ProcPtrPtr(exLineF)^;1414	            ProcPtrPtr(exLineF)^ := @XDebugLineF;Nonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UDebug.inc1.p"; Line 1443:1444; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UDebug.inc1.p"; Line 1443:1444)1443	{           IF ProcPtrPtr(exLineF)^ = @XDebugLineF THEN1444	                ProcPtrPtr(exLineF)^ := pOldexLineF; }1443	            IF ProcPtrPtr(exLineF)^ = @XDebugLineF THEN1444	                ProcPtrPtr(exLineF)^ := pOldexLineF;*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UMacApp.TApplication.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TApplication.pExtra lines in 1st before 3128 in 2nd (File "HardDisk:MPW:MacApp:Libraries:UMacApp.TApplication.p"; Line 3128; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TApplication.p"; Line Æ3128)3128	            gClipClaimed := FALSE;*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UMacApp.TControls.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TControls.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMacApp.TControls.p"; Line 922; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TControls.p"; Line 922:923) 922	    WhileFocused(DoSetVal, redraw); 922	    IF GetCtlValue(fCMgrControl) <> newVal THEN 923	        WhileFocused(DoSetVal, redraw);Nonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMacApp.TControls.p"; Line 1339; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TControls.p"; Line 1340)1339	    fScrollers := NIL;1340	*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UMacApp.TDocument.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TDocument.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMacApp.TDocument.p"; Line 1051; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMacApp.TDocument.p"; Line 1051)1051	    { SetChangeCount(0);  ... we don't always want to do that }1051	    SetChangeCount(0);*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UMemory.inc1.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 16:17; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line 16)  16	PROCEDURE BuildCodeReserve(allocLim: Size;  17	                           fromGZ: BOOLEAN);  16	FUNCTION GrowZoneProc(needed: Size): LONGINT;Nonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 20; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line 19:20)  20	FUNCTION HandleIsEligible(h: Handle): BOOLEAN;  19	PROCEDURE BuildCodeReserve(allocLim: Size;  20	                           fromGZ: BOOLEAN);Extra lines in 2nd before 23 in 1st (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line Æ23; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line 23:25)  23	FUNCTION HandleIsEligible(h: Handle): BOOLEAN;  24	    FORWARD;  25	Extra lines in 1st before 51 in 2nd (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 48:50; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line Æ51)  48	FUNCTION CallAppGZ (needed: LONGINT; routine: ProcPtr): LONGINT;  49	    INLINE $205F, $4E90;                                { MOVE.L (A7)+,A0; JSR (A0) }  50	Extra lines in 1st before 712 in 2nd (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 712; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line Æ712) 712	    gAppGrowZone := NIL;Nonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 899:909; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line 898:912) 899	                IF codeSize + reserveSize + 8 > pSzCodeReserve THEN 900	                    BEGIN                                   { reserve is too big } 901	                    reserveSize := pSzCodeReserve - codeSize - 8; 902	                    IF reserveSize > 0 THEN 903	                        SetHandleSize (pCodeReserve, reserveSize) 904	                    ELSE 905	                        BEGIN 906	                        EmptyHandle (pCodeReserve); 907	                        pReserveExists := FALSE; 908	                        END; 909	                    result := 1; 898	     899	                { the following test is an optimization to avoid calling 900	                BuildCodeReserve if there is no hope of reducing 901	                the code reserve handle } 902	                IF codeSize + reserveSize + 8 > pSzCodeReserve THEN 903	                    BEGIN                                   { reserve is too big } 904	                    pReserveExists := FALSE; 905	                    { this should lower the code reserve } 906	                    BuildCodeReserve(reserveSize, TRUE); 907	     908	                    { see if we succeeded in freeing some memory } 909	                    IF IsHandlePurged(pCodeReserve) THEN 910	                        result := 1 911	                    ELSE IF GetHandleSize(pCodeReserve) < reserveSize THEN 912	                        result := 1;Extra lines in 1st before 935 in 2nd (File "HardDisk:MPW:MacApp:Libraries:UMemory.inc1.p"; Line 932:933; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UMemory.inc1.p"; Line Æ935) 932	         933	        IF (result = 0) & (gAppGrowZone <> NIL) THEN result := CallAppGZ (needed, gAppGrowZone);*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UTEView.TTECommand.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UTEView.TTECommand.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UTEView.TTECommand.p"; Line 349; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UTEView.TTECommand.p"; Line 349) 349	    SetRect(itsMargins, 0, 0, 10, 0);                   { No bottom margin. } 349	    SetRect(itsMargins, 10, 8, 10, 0);                  { No bottom margin. }*** EOF on both files at the same time ***File #1: HardDisk:MPW:MacApp:Libraries:UTEView.TTEView.pFile #2: Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UTEView.TTEView.pNonmatching lines (File "HardDisk:MPW:MacApp:Libraries:UTEView.TTEView.p"; Line 887; File "Programming:ETO Tools:MacApp:MacApp 2.0.1:MacApp 2.0.1 - HD Ready:Libraries:UTEView.TTEView.p"; Line 887) 887	                    { info.affectsMenus := FALSE; } { ahem... what about 'Select All' ? } 887	                    info.affectsMenus := FALSE;*** EOF on both files at the same time ***