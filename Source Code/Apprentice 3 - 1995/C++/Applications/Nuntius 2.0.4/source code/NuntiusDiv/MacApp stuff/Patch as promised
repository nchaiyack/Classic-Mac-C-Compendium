Path: ruc.dk!news.uni-c.dk!sunic!ugle.unit.no!trane.uninett.no!nac.no!eunet.no
    !nuug!EU.net!howland.reston.ans.net!cs.utexas.edu!uunet!psinntp
    !gatekeeper.nsc.com!voder!apple.com!applelink.apple.com
From: B.HABLUTZEL@AppleLink.Apple.COM (Hablutzel, Bob,PAS)
Newsgroups: comp.sys.mac.oop.macapp3
Subject: Patch as promised
Date: 14 Nov 1994 10:04:15 -0800
Organization: AppleLink Gateway
Lines: 84
Sender: daemon@apple.com
Message-ID: <784834720.1320703@AppleLink.Apple.COM>
NNTP-Posting-Host: apple.com

Folks -

  I recently promised a patch for getting controls to print properly. Actually,
there is a patch, a global variable, and a modification of the MacApp sources
that is required; the fix is a little drastic, but it works.

  TCtlMgr::Draw needs to be modified to be:

pascal void TCtlMgr::Draw(const VRect& area)   // override
{
   if (this->IsCMgrVisible())
   {

// Save the control we are drawing

   gInDrawingControl = this;

   // Set the port in case we're printing
#if qDebug
   this->AssumeFocused();
#endif

   WindowPtr savedOwner = (*fCMgrControl)->contrlOwner;
   (*fCMgrControl)->contrlOwner = (WindowPtr)(qd.thePort);

   PenNormal();
   CWhileOutlinePreferred setOP(fPreferOutline);

   Draw1Control(fCMgrControl);

   (*fCMgrControl)->contrlOwner = savedOwner;

// Clear the drawing control

   gInDrawingControl = NULL;
   }

   inherited::Draw(area);  // to get adornment
} // TCtlMgr::Draw




  gInDrawingControl is a global defined to be a TCtlMgr*, and it is initially
NULL.
   After this, you need to patch GetCVariant as follows:

// TrapPatchGetCVariant defines the override we put into GetCVariant to handle
// the bizarre printing errors

pascal short TrapPatchGetCVariant( ControlHandle theControl )
{
   TCtlMgr*control = (TCtlMgr*) GetCRefCon( theControl );

   if ((gInDrawingControl != NULL) && (control == gInDrawingControl))
   return control->fProcID;
   else
   return ((GetCVariantType)trapPatchGetCVariant.oldTrapAddr)( theControl );
}


The trick here is that the refCon for the control is set to point to the
TCtlMgr object that created it. We make sure that we are really drawing a
particular control by (a) validating the gInDrawingControl global, and (b)
checking the refCon. If these tests pass OK, then we grab the refCon, convert
it back into a TCtlMgr, and use the fProcID field from that object. Otherwise,
we just pass it along.


Cheers,

Bob



Bob Hablutzel
Hablutzel Consulting
ALink: B.HABLUTZEL
Phone: 603 749-1128
Fax:   603 749-1186



Ø
---------------------------------------------------------------------------
