GraphicsBuffers 3.0

Author's Notes

GraphicsBuffers is a high-speed graphics package, intended for use mainly in games. Complete source code is included, as well as two sample programs. The GraphicsBuffers API provides both direct and mask blitters for 16, 8 and 4-bit depths.

GraphicsBuffers itself consists of a core set of 3 files: GraphicsBuffers.h, GraphicsBuffers.c, and Graphics Defines.h. You may use these files freely in your own applications. The GraphicsBuffers API is modeled after the GWorld API, so those familiar with GWorlds should have no problems using GraphicsBuffers.

For example, a typical program using GWorlds would probably have:

NewGWorld();
SetGWorld();
CopyBits();
DisposeGWorld();

If you use GraphicsBuffers, you would instead use:

NewGraphicsBuffer();
SetGraphicsBuffer();
CopyGraphicsBuffer();   [or BlitGraphicsBuffer_8bit()]
DisposeGraphicsBuffer();

GraphicsBuffers is not intended to compete with the excellent sprite animation frameworks out there, such as Tony Myle's SpriteWorld or Ingemar Ragnemalm's SAT. It fills a slightly different niche. GraphicsBuffers supplies only the graphics part; you have to do the rest: roll up your own sprite routines (such as collision detection), sound, etc. Personally, I just don't have the time to learn additional frameworks (SpriteWorld, SAT, PowerPlant, TCL, MacApp, etc). In addition, unlike SpriteWorld, GraphicsBuffers support 16-bit blitters, and unlike SAT, the complete source code is supplied.

Admittedly, the blitters are not the fastest around, but for me they're fast enough (for now). On my Duo 230 at 8-bit, twelve 32x32 pixel sprites achieved about 76 fps using the blitters, compared to 20 fps using CopyMask.

I welcome any comments, suggestions, improvements, and criticisms. I would also like to find out the frame rates of the TestBed demo on your Macs, especially the lower end models.

--Hiep
--6/22/95