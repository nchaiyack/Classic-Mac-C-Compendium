Submitted-by: oleg@ponder.csci.unt.edu (Kiselyov Oleg)Posting-number: Volume 43, Issue 51Archive-name: grayimage/part01Environment: C++, G++ 2.2.2+, Symantec 6.0.1+, Sun, HP, Mac, Sequentgrayimage_classlib is a C++ class library to do a genericprocessing of grayscale images.  It is one part of my imagecompression code I've been messing with for almost 3 years. This partis general enough to be of some interest to folks at large (Ihope). It lets you do a variety of different operations on images,rectangular areas, etc: say, add two images, compute their "scalarproduct", modify pixel values over the entire image or somerectangular area of it in a _variety_ of ways, equalize the imagehistogram, stuff like that.  One function, shift_clip_add(), doesactually the filtration (convolution). Morphological filtration isimplemented as well. I tried to make the code as optimal as I couldthink of (without getting into assembly -:). The package canread/write XWD, Group G TIFF and PGM file formats; actually, thepackage understands which file format it's asked to read and selectsthe appropriate method automatically.  I demonstrated pieces at DataCompression Conferences, and some people suggested me submit it intothe public domain.The file images.dr tells exactly which modules are in thepackage and what they are good for. There are several v*.cc files inthe package: these are verification files, you can compile them andrun to make sure everything works as it's supposed to.  The validationfiles can also be used as an example as to how to use the package(because they test, that is, use all the constructions/classes/functions /methods of the package, and not once 8:)The package has been compiled with gcc/g++ version 2.2.2 andlater on Sun Sparc/SunOS, HP 9000, Sequent Symmetry/Dynix,Concurrent/RTU, and with Symantec C++ 6.0.1 (through 7.0.2) on Mac.The package has been in operation for 2.5 years.I also have to mention that the image package I'm submittingis just the very bottom layer of the image and video processing stuffI've been working on. The bottom layer is meant to give the basicworking environment rather to do something fancy with the image(though, BTW, function shift_clip_add() makes the convolution in twostmts; and this lets you do a whole lot of the fancy things in thedigital darkroom). So, there is much more to the story. BTW, it alsomeans that I'm constantly adding to the package (as I come across aneed for some function, option, etc), so your comments/suggestionswill be highly appreciated.