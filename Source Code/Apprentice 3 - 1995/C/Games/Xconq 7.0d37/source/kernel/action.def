/* The definitions of all the types of actions in Xconq.   Copyright (C) 1992, 1993, 1994 Stanley T. Shebs.Xconq is free software; you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation; either version 2, or (at your option)any later version.  See the file COPYING.  */DEF_ACTION("none", A_NONE, "",  prep_none_action, do_none_action, check_none_action,  (Unit *unit, Unit *unit2),  "The non-action (not used, but maybe a good placeholder)")DEF_ACTION("move", A_MOVE, "xyz",  prep_move_action, do_move_action, check_move_action,  (Unit *unit, Unit *unit2, int x, int y, int z),  "Change position to the given cell and altitude")DEF_ACTION("enter", A_ENTER, "U",  prep_enter_action, do_enter_action, check_enter_action,  (Unit *unit, Unit *unit2, Unit *dest),  "Enter a transport")DEF_ACTION("attack", A_ATTACK, "Un",  prep_attack_action, do_attack_action, check_attack_action,  (Unit *unit, Unit *unit2, Unit *defender, int n),  "Attack a given unit")DEF_ACTION("overrun", A_OVERRUN, "xyzn",  prep_overrun_action, do_overrun_action, check_overrun_action,  (Unit *unit, Unit *unit2, int x, int y, int z, int n),  "Attack everything in a cell and occupy if possible")DEF_ACTION("fire-at", A_FIRE_AT, "Um",  prep_fire_at_action, do_fire_at_action, check_fire_at_action,  (Unit *unit, Unit *unit2, Unit *defender, int m),  "Throw a given material at a given unit")DEF_ACTION("fire-into", A_FIRE_INTO, "xyzm",  prep_fire_into_action, do_fire_into_action, check_fire_into_action,  (Unit *unit, Unit *unit2, int x, int y, int z, int m),  "Throw a given material at a given cell")DEF_ACTION("capture", A_CAPTURE, "U",  prep_capture_action, do_capture_action, check_capture_action,  (Unit *unit, Unit *unit2, Unit *defender),  "Take a unit prisoner")DEF_ACTION("detonate", A_DETONATE, "xyz",  prep_detonate_action, do_detonate_action, check_detonate_action,  (Unit *unit, Unit *unit2, int x, int y, int z),  "Damage or destroy self in a violent fashion")DEF_ACTION("produce", A_PRODUCE, "mn",  prep_produce_action, do_produce_action, check_produce_action,  (Unit *unit, Unit *unit2, int m, int n),  "Produce a quantity of a material")DEF_ACTION("transfer", A_TRANSFER, "mnU",  prep_transfer_action, do_transfer_action, check_transfer_action,  (Unit *unit, Unit *unit2, int m, int n, Unit *unit3),  "Transfer a quantity of a material between two units")DEF_ACTION("research", A_RESEARCH, "u",  prep_research_action, do_research_action, check_research_action,  (Unit *unit, Unit *unit2, int u3),  "Study how to build the given type")DEF_ACTION("toolup", A_TOOL_UP, "u",  prep_toolup_action, do_toolup_action, check_toolup_action,  (Unit *unit, Unit *unit2, int u3),  "Prepare tools to build the given type")DEF_ACTION("create-in", A_CREATE_IN, "uU",  prep_create_in_action, do_create_in_action, check_create_in_action,  (Unit *unit, Unit *unit2, int u3, Unit *dest),  "Start construction of a unit inside (or outside?) another unit")DEF_ACTION("create-at", A_CREATE_AT, "uxyz",  prep_create_at_action, do_create_at_action, check_create_at_action,  (Unit *unit, Unit *unit2, int u3, int x, int y, int z),  "Start construction of a unit at a given location")DEF_ACTION("build", A_BUILD, "U",  prep_build_action, do_build_action, check_build_action,  (Unit *unit, Unit *unit2, Unit *newunit),  "Make progress on the given unit")DEF_ACTION("repair", A_REPAIR, "U",  prep_repair_action, do_repair_action, check_repair_action,  (Unit *unit, Unit *unit2, Unit *unit3),  "Repair a given unit")DEF_ACTION("disband", A_DISBAND, "",  prep_disband_action, do_disband_action, check_disband_action,  (Unit *unit, Unit *unit2),  "Dismantle the given unit completely")DEF_ACTION("transfer-part", A_TRANSFER_PART, "nU",  prep_transfer_part_action, do_transfer_part_action, check_transfer_part_action,  (Unit *unit, Unit *unit2, int parts, Unit *unit3),  "Split a part of self into another unit")DEF_ACTION("change-type", A_CHANGE_TYPE, "u",  prep_change_type_action, do_change_type_action, check_change_type_action,  (Unit *unit, Unit *unit2, int u3),  "Change self to a different unit type")DEF_ACTION("change-side", A_CHANGE_SIDE, "S",  prep_change_side_action, do_change_side_action, check_change_side_action,  (Unit *unit, Unit *unit2, Side *side),  "Change to a given side")DEF_ACTION("alter-terrain", A_ALTER_TERRAIN, "xyt",  prep_alter_cell_action, do_alter_cell_action, check_alter_cell_action,  (Unit *unit, Unit *unit2, int x, int y, int t),  "Alter cell terrain")DEF_ACTION("add-terrain", A_ADD_TERRAIN, "xydt",  prep_add_terrain_action, do_add_terrain_action, check_add_terrain_action,  (Unit *unit, Unit *unit2, int x, int y, int dir, int t),  "Add border/connection/coating terrain")DEF_ACTION("remove-terrain", A_REMOVE_TERRAIN, "xydt",  prep_remove_terrain_action, do_remove_terrain_action, check_remove_terrain_action,  (Unit *unit, Unit *unit2, int x, int y, int dir, int t),  "Remove border/connection/coating terrain")