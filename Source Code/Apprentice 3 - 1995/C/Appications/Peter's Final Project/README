 Peter's Final Project -- A texture mapping demonstration © 1995, Peter Mattis E-mail: petm@soda.csua.berkeley.edu Snail-mail:  Peter Mattis  557 Fort Laramie Dr.  Sunnyvale, CA 94087 Avaible from: http://www.csua.berkeley.edu/~petm/final.html This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.   Parts of this project contain code from the Independent JPEG Group's software. Specifically, the file "texture.c" uses code from the file "example.c" in the libjpeg library distribution. The file also uses the libjpeg library. ---------------------------------------------------------------------I decided to release the source to my final project for a class incomputer graphics here at Berkeley. The source is distributed underthe GNU General Public License. What this means for you and me isthat if you have the demo application which is the final projectthen you are entitled to the source. If you modify the source anddistribute a modified demo, then you must make the modified sourceavailable.---------------------------------------------------------------------The demo is a texture mapped maze in which you can move around.Several features: - The mazes can be randomnly generated. - The view can be any size as long as its square. - The maze can be any size. - Depth shading. - A form of psuedo-Gouraud shading for the textures. - Initial support for 3d objects that are Gouraud shaded. - Collision detection between objects and walls. - Support for 8 and 24 bit color. Though only 8 bit color   is currently supported on Macs, all the code for 24 bit   color is present.Several limitations: - Does not handle multiple objects correctly. - Collision detection only works for the orthogonal worlds   that can be created from standard square mazes.   ---------------------------------------------------------------------My Plea: I've freely given away the source code. I expect nothing in return. However, its nice to hear comments and criticisms. (Especially if there is a <gasp> bug.)