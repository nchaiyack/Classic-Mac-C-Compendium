+-----------------------------------------------+
|       POV-Utilities Macintosh Tutorial        |
|                version 2.0                    |
|           by Eduard [esp] Schwan              |
+-----------------------------------------------+


UTILITY:  Sponge


==============
1. WHAT IS IT?
==============

Sponge creates a recursive fractal pattern of shapes in the
overall shape of a cube.  Sponge creates a file formatted for
POV-Ray.  The Sponge is the size of a box from <-3,-3,-3> to
<3,3,3>.  The shape used for each "atom" can be itself any shape
(sphere, cube, CSG, etc.)  Each "level" or group of shapes can
be individually textured.
Note: Because it is a recursive algorithm, increasing the depth
will geometrically increase the number of objects created.
    Depth  # of Objects
    -----  ------------
      1        147
      2       2947
      3      58947 (approx. 6 megabyte file!)


===================
2. HOW DO I USE IT?
===================

--------------
* Where is it?
--------------
Sponge is in the Utilities menu, under the sub-menu "Scene File
Creation".  It is called "Sponge Generator."

----------------
* The parameters
----------------
The parameters for Sponge are:

Recursion Depth:
  This is the number of recursive levels of objects to generate.
  You will likely only use a value of 1 or 2 here.

------------
* The Output
------------
Sponge creates a file called Sponge.inc, with an object called
SpongeShape.  It expects you to declare a shape for the atoms,
called SpongeAtomShape.  It also expects you to declare a
texture for each level of atomic objects (starting at zero, see
the next section.)

-------------------------
* Post-processing cleanup
-------------------------
After creating the .inc file, you will need to create a scene
file that includes this Sponge.inc file, and has a camera
and light source.  You also need to declare a unit-sized
shape for the atoms, and call the shape SpongeAtomShape.
For example:
  #declare SpongeAtomShape = object { sphere { <0, 0, 0> 1 } }
You must also declare a texture for each level of atomic
objects (starting at zero.)  For example, for a level 1 object:
  #declare SpongeAtom_Tex0 = pigment { color red 1 }
  #declare SpongeAtom_Tex1 = pigment { color green 1 }
The higher numbered textures go on the smaller level atoms.


=============
3. AN EXAMPLE
=============

-----------------------------
* What we are going to create
-----------------------------
We want to create a Sponge object 1 level deep.  It's default
size is 3x3x3, so we will shrink it to 1x1x1.  We need to
create an interesting atomic shape, and two textures (0 and 1.)

-----------------------
* What settings we need
-----------------------
Set the "Recursion Depth" to 1.

Pick an output file called SpongeTut.inc.  Save it in the
TUTORIAL folder.  There is a SpongeTut.POV file there
waiting for us.

Click the OK button, and after a few seconds, the
SpongeTut.inc file will be created.

------------------------------------------
* What post-processing steps we need to do
------------------------------------------
There are no cleanup steps for this tutorial.

We can now open the SpongeTut.POV file in POV-Ray by simply
double-clicking on SpongeTut.POV from the Finder.  POV-Ray will
open it, and we should be ready to take a look at our new
creation.  First, look through the SpongeTut.POV file to see
how the object is included and placed in the scene, and how the
sponge atom shape and textures are declared.

-----------------------------------------
* How to incorporate it into a scene file
-----------------------------------------
You may want to become familiar with the default scene that
is set up in UtilTut.inc.  This file places the camera, creates
a sky and floor, and illuminates the scene.  It assumes we are
in the negative Z direction, looking at 0,0,0.  This is included
in each of the Tutorial .POV files.  All we need to do is put
our object into the .POV file and render it.

At the end of SpongeTut.POV you will see how the object is put
into the scene.

First we must declare the textures for the atomic objects:
  #declare SpongeAtom_Tex0 = texture
  { UtilTut_Texture pigment { color red 1 } }
  #declare SpongeAtom_Tex1 = texture
  { UtilTut_Texture pigment { color green 1 } }

Then we declare the atomic shape itself:
  #declare SpongeAtomShape = intersection
  {
    box { <-1,-1,-1> <1,1,1> rotate <45,0,45> }
    sphere { 0*y, 1.3 }
  }

The include file we just created is included with the statement:
  #include "SpongeTut.inc".
This defines the object shape, but doesn't create an object yet.
The object is declared on the next lines with:
  object
  {
    SpongeShape
    scale 1/3  // it is 3x3x3, scale down to 1x1x1
    :::

In POV-Ray, set the Rendering Options to 160x120, and render
the image.  There it is!
