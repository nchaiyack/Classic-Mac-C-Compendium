+-----------------------------------------------+|       POV-Utilities Macintosh Tutorial        ||                version 2.0                    ||           by Eduard [esp] Schwan              |+-----------------------------------------------+UTILITY:  Suds==============1. WHAT IS IT?==============Suds creates a group of objects (usually spheres), inside aboxed in area.  The objects fill the area in a random order,but each object touches one of the objects next to it.  Sudscreates a file formatted for POV-Ray.  The shape used foreach "sud" can be itself any shape (sphere, cube, CSG, etc.)Each atom can be individually textured, and you can specifythe textures.===================2. HOW DO I USE IT?===================--------------* Where is it?--------------Suds is in the Utilities menu, under the sub-menu "Scene FileCreation".  It is called "Suds Generator."----------------* The parameters----------------The parameters for Suds are:# of Suds:  This is the number of suds to generate.  You will likely  set this to something between 50 and 500.  NOTE: If you tell it to create more Suds than will easily  fit in the constraint space, Suds will keep trying to place  a sud, but will eventually give up and show an error message.  It will create the Suds file with as many suds as it could  fit in the area.Min. Sud Radius:  This is the smallest sud radius that will be randomly  generated.  All spheres will be this size or larger.# of Textures:  Total # of textures to reference.  If this is zero, no texture  identifiers will be put in the sud statements.  If this is  one or more, then that many texture identifiers will be assigned  the suds.  The texture ids will be named sudsTex1 through  sudsTexNN, where NN is the # of textures.  Suds references  these ids, and also declares the individual texture  statements in the include file, assigning random but  boring textures.Max. Sud Radius:  The suds will have a radius no larger than this amount.  All  spheres will have radii between the minimum and this maximum  radius.Suds Region (X Y Z):  This is the area used to constrain the suds.  The X,Y,Z  values are used to create an area from -x to x, -y to y,  -z to z, which is used by the bounding style (next) selection  to make an area to keep the suds within.Suds Bounding Style:  centers constrained to rect:    This keeps the sud centers within the X,Y,Z box bounds.  objects constrained to rect:    This keeps the sud surfaces within the X,Y,Z box bounds.  objects constrained to sphere:    This keeps the sud surfaces within the bounds of a    sphere of a radius determined by the minimum of X or Y.Random Distribution Function:  The X,Y,Z position and radius of each object is generated by  a random number function.  Here are the kinds of functions  you can choose from:  Even:    This uses unweighted random numbers, evenly scattered.  Gauss(5):    This weights the random#s, making them "tend to cluster"    around the center.  Fewer random numbers occur at the edges.  Gauss(10):    Same as Gauss(5) above but even more heavily weighted at center.Output Format:  POV 1.0:    Old POV-Ray 1.0 syntax format.  POV 2.0:    New POV-Ray 2.0 syntax format (preferred.)------------* The Output------------Suds creates a file called POVSuds.inc.  This file contains alist of texture declarations, a suds object declaration, andthe suds object declaration itself.-------------------------* Post-processing cleanup-------------------------After creating the .inc file, you will need to create a scenefile that includes this POVSuds.inc file, and has a cameraand light source.  You could use the default textures and sudsobject shape provided, or you can alter them.The textures are sequentially numbered, and look like this:  #declare sudsTex1  = texture {    pigment {      color rgb <0.886837,0.898129,0.951079>    }    // normal { wrinkles, bumps, etc. }    finish {      ambient 0.2 diffuse 0.7      specular 0.8 roughness 0.01    }  } // sudsTex1   #declare sudsTex2  = texture {  :::The suds object declared is a simple sphere:  #declare SudsObject = sphere { <0, 0, 0> 1.0 }The suds object is declared as a union, called "Suds".To create the suds object, you would add it tothe .POV file like this:  object { Suds }=============3. AN EXAMPLE=============-----------------------------* What we are going to create-----------------------------We want to create a rectangular area filled with 200 Suds.The suds will fill a rectangular box 100x50x10.  We will usethe default spherical suds shape, and add 10 textures.  Theminimum radius will be 1.0, and the maximum radius will be 3.0.-----------------------* What settings we need-----------------------Set the "# of Suds" to 200.Set the "Min. Sud Radius" to 1.0.Set the "# of Textures" to 10.Set the "Max. Sud Radius" to 3.0.Set the "Suds Region" to:  X = 100  Y =  50  Z =  10Set the "Suds Bounding Style" to "objects constrained to rect".Set the "Random Dist. Function" to "Even".Set the "Output Format" to "POV 2.0".Pick an output file called SudsTut.inc.  Save it in theTUTORIAL folder.  There is a SudsTut.POV file therewaiting for us.Click the OK button, and after a minute or two, theSudsTut.inc file will be created.------------------------------------------* What post-processing steps we need to do------------------------------------------There is one cleanup step for this tutorial.  The texturedeclarations provided in the SudsTut.Inc file are ratherbland, and so we'll replace them.  Open the SudsTut.Inc fileand delete all the texture statements between these twocomment lines:  /* --- Example texture declarations, alter them to your liking --- */  /* --- end of texture declarations */Normally you would cut them from here, and paste them into your.POV file, and modify them there, but this is already done; thetexture statements are already in the SudsTut.POV file.  We willuse the default SudsShape, so we will leave it in SudsTut.Inc.That's all you need to do.We can now open the SudsTut.POV file in POV-Ray by simplydouble-clicking on SudsTut.POV from the Finder.  POV-Ray willopen it, and we should be ready to take a look at our newcreation.  First, look through the SudsTut.POV file to seehow the suds object is included and placed in the scene, andhow the various textures are declared.-----------------------------------------* How to incorporate it into a scene file-----------------------------------------You may want to become familiar with the default scene thatis set up in UtilTut.inc.  This file places the camera, createsa sky and floor, and illuminates the scene.  It assumes we arein the negative Z direction, looking at 0,0,0.  This is includedin each of the Tutorial .POV files.  All we need to do is putour object into the .POV file and render it.At the end of SpongeTut.POV you will see how the object is putinto the scene.First we must declare the textures for the suds:  #declare sudsTex1 = texture { UtilTut_Texture }  #declare sudsTex2 = texture { ...  :::  #declare sudsTex10 = texture { ...The include file we just created is then included with the statement:  #include "SudsTut.inc".This declares the suds positions, but doesn't create an object yet.The object is actually declared on the next lines with:  object  {    Suds    scale 1/10  // it is 100x50x10, scale down to 10x5x1  }In POV-Ray, set the Rendering Options to 160x120, and renderthe image.  There it is!