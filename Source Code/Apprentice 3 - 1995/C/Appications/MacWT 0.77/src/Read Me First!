MacWT 0.77A 3-D Graphics Engine for 680x0 or PowerPCThank you for trying MacWT, by Bill Hayden and Nikol Software.What is MacWT?MacWT is an easy-to-use 3-D graphics engine, based on the cross-platform wt engine originally developed by Chris Laurel.  MacWT was built from a base of wt 0.05c1 with the exception of those changes from b to c1 which broke the floor/ceiling rendering code.  The first version of MacWT was created by Turlough O'Connor in early 1994.  While the current MacWT is based on Mr. O'Connor's MacWT 0.04, little of the original code remains.MacWT has been tested on the following computers:Macintosh IIciMacintosh IIcxQuadra 840avQuadra 650 w/PowerPC upgrade cardPowerMac 7100/66PowerMac 8100/80What is required to run MacWT?You will need a 68020, 68030, or 68LC040 with an FPU; a 68040; or a PowerPC to run MacWT.  MacWT requires at least 700k to run, and prefers 2000k or more with medium to large world files.  MacWT requires System 7 or above.How do I move around the MacWT world?MacWT uses a (hopefully) very intuitive set of movement keys.  They are as follows:Forward - 8 or Up ArrowBack - 2 or Down ArrowTurn Left - 4 or Left ArrowTurn Right - 6 or Right ArrowJump - Space BarAccelerate Movement - Shift keySlide Sideways - Control + {Turn Right or Turn Left}Action Keys - w, e, r, t   (Defined for future use - right now they are just set to jump)Toggle between mouse/keyboard control - yPause - Tab keyQuit - Escape keySelecting "New Game" from the file menu or pressing the forward key starts the simulation.Where can I find the latest version?You can always find the up-to-the-day latest version of MacWT and its source via anonymous FTP from gopher.circa.ufl.edu/pub/software/ufmug/mirrors/LocalSW/Hayden/ or on the web at http://grove.ufl.edu:80/~nikolsw.  This web address may no longer be valid starting in 1996.  Don't worry, though, as you can also find MacWT updates on America On-Line and the common internet sites, such as UMich and Info-Mac.  If you are doing serious MacWT work, feel free to get in touch with me personally at bmoc1@aol.com or at the address listed below.What is the version history?New Features in 0.77:¥ Another interim release to fix a nasty bug which crashed MacWT if you started the game with 'New Game' instead of just hitting one of the forward keys.¥ Removed .ppm texture support. (the routines were buggy and of little use on the Mac anyway)¥ Updated 68k fixed-point math routines, giving 1% improvement on 68k machines. (every little bit helps!)¥ Minor internal modifications moving toward 16- and 24-bit color capability. (look for this in 0.80) New Features in 0.76:¥ Interim release to fix source code problem. (I included the 0.60 resource file with the 0.70 source release)¥ Direct blitting code added.¥ Minor internal fixes.¥ PICT & PICT-R loading code finished & operational, but it still pops up an unsightly loading window.New Features in 0.70:¥ Wall collision detection, with almost zero reduction in rendering speed!  And I though this one was going to be so difficult!¥ Introduction of an editable physics model, contained in the 'Phys' resource #128 inside MacWT.¥ Internal changes and clean-up to make way for future enhancements.¥ Fixed a bug which crashed MacWT when you quit with cmd-Q after loading was done but before starting a game.¥ MacWT now displays the simulation centered, with a black background.¥ Window zooming functionality has been removed.¥ Paused look has been changed to resemble games such as Marathon and Pathways into Darkness.¥ Pressing the option key during application start-up quits all other applications, providing a slight speed boost.New Features in 0.60:¥ Floor and ceiling collision detection - you can now climb stairs, hit your head on the ceiling, etc.¥ World edge collision detection - no more falling off the edge of the world¥ Movement via the mouse (y key toggles mouse/keyboard control)¥ Mouse control accelerates rendering by about 8% by bypassing the main event loop¥ Escape key quits MacWT¥ The control key is now the only strafe key - I removed the rarely (never?) used / key from this functionality.New features in 0.05b+:¥ The view size can be selected (this is not a scaled view, but a true view size setting).¥ The concept of a "default file" has been removed.  MacWT now prompts the user for a world file on application startup if one was not opened from the Finder.¥ World files can now be double-clicked or drag-opened from the Finder to be opened in MacWT, since world files are now MacWT documents, with their own icons. (Creator McWt and Type TEXT)¥ MacWT now uses the Macintosh's standard 256 color palette instead of loading a 192 color PC palette.  MacWT loads faster and renders much cleaner and better now.¥ MacWT now displays a much more accurate frame-per-second counter.¥ MacWT now automatically switches to 8-bit color on start-up, and switches back to the previous bit depth on exit.  This is temporary, of course, until 16-bit support is added.¥ MacWT now checks for the existence of an FPU on 680x0 machines, and quits if one is not available.¥ Mr. O'Connor's direct screen writing code has been removed.  It was becoming a heavy restriction to the improvement of MacWT and it offered little or no speed improvement.  I will add some new direct-screen writing code when I find/write some.¥ All of Chris Laurel's innumerable wt improvements from 0.04a to 0.05c1, including rendering speed-ups, rendering glitch fixes, fixed-point speed-ups, partial 16-bit color support, support for standard texture file formats such as GIF, object gravity and physics, floor and ceiling collision detection, and many more.What kind of performance can I expect?Using the two example files that come with MacWT, here are some benchmarks I obtained at the standard view size (320 x 200):On a 50MHz IIci, "small.world" averaged about 4.9 frames per second.On a 50MHz IIci, "huge2.world" averaged about 2.3 frames per second.On a 66MHz 7100/66, "small.world" averaged about 34 frames per second. (39 fps with System 7.5.1 MathLib)On a 66MHz 7100/66, "huge2.world" averaged about 21 frames per second. (26 fps with System 7.5.1 MathLib)Incredibly, but perhaps not surprisingly, the additon of the new native MathLib on PowerMacs instantly improves performance by almost 15%, as shown in parentheses.On a 66MHz 7100/66, "small.world" averaged about 21.7 fps at the largest view size (480 x 300), under System 7.5.1.No, I meant how fast can it go?On a 66MHz 7100/66, "small.world" averaged just under 56 fps at the (240 x 150) view size, under System 7.5.1.  Fast enough for ya?  Imagine a PowerMac 8100/110...  Pentium users: Chew on that figure for awhile, and don't forget that collision detection is fully active for that figure, so let's not compare Apples and oranges (or was it lemons?).What are the known bugs?The rendering engine still contains a few gliches left over from its wt days:1. MacWT renders floors and ceilings 1-pixel off from the right edge of the screen, yet walls and sky are rendered OK.2. Ceilings are occasionally clipped when looking through a "hole" in a wall.3. You can jump or move while in mid-air.Plus, some new and imporved bugs have popped up:4. There appears to be a memory leak - this may be new or old, I'm not sure.  It's especially apparent when using the large view sizes on the PowerPC.5. Wall collision detection is excellent, with one exception: it has problems when running into positive corners (i.e. not the "go sit in the corner" corner, but outward poking corners, like the outside corner of a cube)What is the future of MacWT? I hope to add several features over the next few weeks/months.  Here are the proposed features in no particular order:¥ 16-bit color support (partially completed)¥ Moveable 2-D Sprites (I or someone else just needs to implement the 0.05c1 version of render.c and slice.c, but this is much easier said than done.)While I will try to add the items listed above, I will attempt to keep MacWT at a level where developers can use it right away.  I was thinking of adding asyncronous sound routines, speech, etc., but on second thought, I realized that I never wanted to reach a point with MacWT where developers had to spend time taking something out to use it like they wanted to.  It's daunting enough as it is - I don't want to add unneeded complexity.If you have any comments or suggestions about MacWT (or anything else, for that matter) drop me a line anytime.Snail Mail:Nikol Softwarec/o William Hayden1325 NE 9th StreetGainesville, FL  32601-3720Internet:bmoc1@aol.comAnonymous FTP:ftp.circa.ufl.edu/pub/software/ufmug/mirrors/LocalSW/Hayden/WWW:http://grove.ufl.edu:80/~nikolsw   (valid until early '96)Home Phone:(904) 378-2938Please be aware that I will not accept collect calls.