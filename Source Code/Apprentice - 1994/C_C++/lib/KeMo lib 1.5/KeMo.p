{}{  File: KeMo.p }{		Pascal interface for the KeMo Reaction Time Utilities }{}{ Copyright © Dan Costin 1992}{ All Rights Reserved}{}unit KeMo;interface	const		KeMoAllDevs = $0001;										{ flags for KeMoSelect }		KeMoDev2   = $0004;		KeMoKey    = $0004;		KeMoDev3   = $0008;		KeMoMouse  = $0008;		KeMoDev4   = $0010;		KeMoTablet = $0010;		KeMoDev8   = $0100;		KeMoDev9   = $0200;		KeMoDevA   = $0400;		KeMoDevB   = $0800;		KeMoDevC   = $1000;		KeMoDevD   = $2000;		KeMoDevE   = $4000;		KeMoDevF   = $8000;		KeMoOneKey = $00010000;		KeMoAllKeys = $00020000;		KeMoOneMouse = $00040000;		KeMoAllMice = $00080000;		KeMoDown = $00; 			{ flags and transitions for KeMoWait }		KeMoUp = $01;		KeMoUpDown = $02;		KeMoTimedOut = $04;		KeMoNoTimeOut = -1;		{ no timeout for KeMoWait }		KeMoQuiet = $0001;			{ flags for KeMoInit }		KeMoNoAlert = $0002;		KeMoAltKeys = $0004;		KeMoNoKeys = $0008;		KeMoNoTimer = $0010;		KeMoNoSync = $0020;		KeMoNoTCheck = $0040;		KeMoNoCorrection = $0080;		{ flag for KeMoTimerStop }		KeMoNoMBarInit = $0100;		KeMoErrorVeryOldSystem = -501;		{ errors }		KeMoErrorOldSystem = -502;		KeMoErrorNotADB = -503;		KeMoErrorNotInitialized = -504;		KeMoErrorBadArgs = -505;		KeMoErrorUnsuccessful = -506;		KeMoErrorNoSuchDevice = -507;		KeMoErrorTimerRunning = -508;		KeMoErrorTimerNotRunning = -509;		KeMoErrorTimerNotInit = -510;		KeMoErrorTimerOff = -511;		KeMoErrorImproperTest = -512;		KeMoErrorNoHeapAlloc = -513;		KeMoErrorNoSync = -514;		KeMoErrorGestalt = -515;		KeMoErrorNoCorrection = -516;		KeMoErrorUnknownDevType = -517;		KeMoErrorOneDevOnly = -518;		KeMoErrorMBarHidden = -519;		KeMoErrorMBarShows = -520;		KeMoErrorMisc = -599;		{ definitions for the more arbitrary ASCII codes returned by KeMoCode2Asc }		K0 = 0;		K1 = 1;		K2 = 2;		K3 = 3;		K4 = 4;		K5 = 5;		K6 = 6;		K7 = 7;		K8 = 8;		K9 = 9;		F1 = 11;		F2 = 12;		F3 = 13;		F4 = 14;		F5 = 15;		F6 = 16;		F7 = 17;		F8 = 18;		F9 = 19;		F10 = 20;		F11 = 21;		F12 = 22;		F13 = 23;		F14 = 24;		F15 = 25;		KSLASH = 'A';		TAB = 'B';		COMMAND = 'C';		DELETE = 'D';		ESC = 'E'; { NO F }		POWER = 'G';		HELP = 'H'; { NO I OR J }		KENTER = 'K';		CAPS = 'L';		KMINUS = 'M';		NUMCLEAR = 'N';		OPTIONL = 'O';		KPERIOD = 'P';		KEQUAL = 'Q';		RETURN = 'R';		SHIFTL = 'S';		CTLL = 'T';		PGUP = 'U';		DOWN = 'V';		PGDOWN = 'W';		DEL = 'X';		HOME = 'Y';		ENDKEY = 'Z';		LEFT = '<';		RIGHT = '>';		UP = '^';		SHIFTR = '@';		CTLR = '#';		OPTIONR = '$';	type					{ structure whose address is to be sent to KeMoWait }		KeMoParms = packed record				key: Byte;				key2: Byte;				updown: Byte;				updown2: Byte;			end;{	function prototypes}	function KeMoInit (flags: INTEGER): longint;	function KeMoSelect (flags: longint): longint;	function KeMoReset: longint;	function KeMoAccuracy: longint;	function KeMoWait (flags: INTEGER; timeout: longint; var parms: KeMoParms): longint;	function KeMoDelay (timeout: longint): longint;	function KeMoTimerTest: longint;	function KeMoSync (when: INTEGER): longint;	function KeMoTimerStart: longint;	function KeMoTimerStop (flags: INTEGER): longint;	function KeMoCode2Asc (code: INTEGER): INTEGER;	function KeMoHideMBar: longint;	function KeMoShowMBar: longint;		function KeMoQuitAllApps: longint;{ available globals, set-up by calling KeMoInit() }			{ KeMoDevArray: each position is 1 if there's a device at that address,					0 otherwise, index from 0 to 15 }{ extern char KeMoDevArray[], }			{ KeMoDevType: each position has the original ADB device handler ID 					for the device: usually 2 or 3 for keyboards, 1 for mouse,					index from 0 to 15 }{ 	 		KeMoDevType[]; }implementationend.