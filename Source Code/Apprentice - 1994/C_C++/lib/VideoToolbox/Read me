VideoToolbox: Read me
April 25, 1994

Denis Pelli
Institute for Sensory Research
Syracuse University
Merrill Lane
Syracuse, NY 13244-5290
denis_pelli@isr.syr.edu

The VideoToolbox is a collection of two hundred C subroutines and several demo and utility programs that I and others have written to do visual psychophysics with Macintosh computers. It's free and may not be sold without permission. It should be useful to anyone who wants to present accurately specified visual stimuli or use the Mac for psychometric experiments. The text file "Video synch" discusses all the ways of synchronizing programs to video displays and the many pitfalls to avoid. The TimeVideo application checks out the timing of all video devices in anticipation of their use in critical real-time applications, e.g. movies or lookup table animation. Low-level routines control video timing and lookup tables, display real-time movies, and implement the luminance-control algorithms suggested by Pelli and Zhang (1991). In particular, GetPixelsQuickly and SetPixelsQuickly peek and poke pixels in bitmaps and pixmaps, CopyBitsQuickly copies bit/pixmaps to the screen, and SetEntriesQuickly and GDSetEntries load the screen's color lookup table, all without any of QuickDraw's color translations. High-level routines help analyze psychophysical experiments (e.g. graphing or maximum-likelihood fitting of psychometric data). Assign.c is a runtime C interpreter for C assignment statements, which is useful for controlling experiments and sharing calibration data. This collection has been continually updated since 1991. Many colleagues have indicated that they are using the software in their labs. Documentation is in the source files themselves. Many of the routines are Mac-specific, but some very useful routines, e.g. the luminance-control, statistics, maximum-likelihood fitting algorithms, and the runtime interpreter are written in Standard C and will work on any computer. Those wishing to acknowledge use of the VideoToolbox software might cite: 
Pelli, D. G. and Zhang, L. (1991) Accurate control of contrast on microcomputer displays. Vision Research, 31, 1337-1350. Reprints are available. 

PowerPC & 680x0:
All the software was written and tested on 680x0 machines. Happily, Scott B. Stevenson <stevenso@garnet.berkeley.edu> reports that TimeVideo, which exercises most of the tricky code, runs happily on his new Power Macintosh 8100/80.

AVAILABILITY:
The VideoToolbox software is continually updated. To get the latest version, just send me your mailing address, and I'll mail you a disk. Or use ftp to download "info-mac/Development/SourceCode/video-toolbox. . . . " from sumex-aim.stanford.edu [36.44.0.6]. Log in as "anonymous"; any password will do. The gopher server is called Info-Mac Archives. If you can't do ftp, you can request a file by email; for instructions send a query to Info-Mac-Request@sumex-aim.stanford.edu. (Or, if you're a member of CompuServe, download VIDEOT.SEA from Library 4  "C and Pascal" in the MacDev forum, but they don't yet have the 1/94 version.) To get future versions automatically, just send me your email address. Each time I post a new version of the VideoToolbox to the Info-Mac Archives, I'll email a copy to everyone on the subscription list. 

The ISR Video Attenuator is a commercial product. Ordering instructions are in the "Video attenuator" file. I have no financial involvement in the ISR Video Attenuator.

AUTHORS:
Denis Pelli (most of the routines)
David Brainard (a dozen or so routines in Assign.c, one in GDOpenWindow.c)
Adobe (ATMInterface.c and ATMInterface.h)
David Brainard & jms (GetTimeDateString.c)
Joseph Laffey (GetVersionString.c)
Mike Kahl (CopyQuickDrawGlobals.c)
Izumi Ozhawa (CVNetConvert in the Utilities folder)
Dave Radcliffe (FlushCacheRange.c)
Preeti Verghese (GetVoltage.c)
SPLAsh Resources (HideMenuBar.c)
Apple & Jamie R. McCarthy (IsCmdPeriod.c)
Mike Kahl & Evan Relkin (kbhit.c)
Mike Schechter (PixMapToPICT.c)
J.N. Little & jmb (ReadMATLABFile.c)
Raynald Comtois, Bill Haake, Peter Lennie (SetEntriesQuickly.c)
EJ Chichilniski (SetFileInfo.c)
SPLAsh Resources (SetMouse.c)
Bart Farell (several routines in SetOnePixel.c and SetPixelsQuickly.c)
Apple (TrapAvailable.c and Zoom.c)
Detailed attribution appears in each file. Please advise of any errors or omissions.

MATLAB:
David Brainard (brainard@condor.psych.ucsb.edu) is presently creating interface files that make it easy to use the VideoToolbox from within MATLAB. If you're interested, contact him. Also see VideoToolboxMATLAB.c in VideoToolboxSources.

GETTING STARTED:
Try the demos: Sandstorm, Grating, FlickeringGrating, Filter, and TimeVideo. TimeVideo times all of your displays, telling you how quickly you can show movies and do lookup table animation. Read "Video synch" and "Advice".

Put the VideoToolbox folder anywhere on your hard disk. The key header files: VideoToolbox.h, VideoToolbox.pre, Luminance.h, mc68881.h, and TranslateLinefeeds.h should be in your THINK C folder (or any subfolder within it), so that THINK C can find them. The simplest way to achieve that is to place the entire VideoToolbox inside your THINK C folder. (The Symantec documents say this is a no-no, but it works fine.) Instead of copying source files to your projects, just "Add" them using the THINK C Source menu. That will make it easy to update the VideoToolbox.

Follow the instructions in VideoToolbox.c to precompile "VideoToolbox.h" to recreate the precompiled header "VideoToolbox.pre", since it must be produced by your version of the compiler. (If you're producing an external code resource for MATLAB then use VideoToolboxMATLAB.c instead.)

All the programs that do accurate luminance control use the monitor-calibration data stored in LuminanceRecord1.h or LuminanceRecord2.h (the number is a screen number, similar--but not identical--to the number that appears in the Monitors control panel). These calibration files describe my monitors (Apple High-Resolution Monochrome), and, naturally, before doing any serious data collection you should replace these files with ones that describe your own monitors. Use the CalibrateLuminance program. You'll need a photometer.

NUMERICAL RECIPES IN C:
A few programs in the VideoToolbox (CalibrateLuminance.c, PsychometricFit.c, and Quick3) use the (very handy) Numerical Recipes software and book. Required changes to these routines are described in the "Improve Numerical Recipes" document in the Notes folder. I have included pre-compiled CalibrateLuminance and Quick3 applications for users that don't have the Numerical Recipes. The Numerical Recipes C Set for Macintosh (main book, example book, and disk) costs $90 from:
Cambridge University Press
Orders Department
110 Midland Avenue
Port Chester, NY 10573
1-(800)-227-0247

VERSION OF THINK C:
I suggest that you upgrade to THINK C 6.01. In a pinch, you can use THINK C 5, but the upgrade is inexpensive and improves the user interface significantly. You cannot use the VideoToolbox with any version of THINK C older than 5. The VideoToolbox includes multiple versions of each THINK C project. Projects whose names end in ".¹5" are in THINK C version 5 format, ".¹6" are in version 6 format, and ".¹" are in version 7 format. Each version of THINK C will read older-format project files (converting them to the new format), but won't read newer formats. (E.g. THINK C 5 will say "Unknown error ID=-192" if you try to open a version 6 project.)

I upgraded from from THINK C 6.0.1 to 7 yesterday (4/6/94). The upgrade is available at no cost from Symantec. The upgrade is very slight, basically a slight enhancement of the user interface of the Symantec Project Manager, and apparently not enhancing the THINK C compiler at all. 

WARNING: the new THINK C 7 compiler crashes when compiling one of my source files (not in the VideoToolbox) that hasn't changed in ages. I found a work-around, but it suggests that you may want to wait for a fixed version (7.01?) before upgrading.

It appears that Symantec is basically dropping THINK C, since it hasn't changed (significantly) since version 6, and since they haven't announced any plans to port it to the PowerPC. (I've also heard that none of the authors work for them any longer.) Symantec is concentrating on C++ (which is based on Zortech C++, not THINK C). I've just ordered MetroWerks CodeWarrior Gold, which provides both C and C++ on both 680x0 and PowerPC Macs and has gotten rave reviews. 

BUGS & SUGGESTIONS:
It's unlikely that you'll find any bugs, but if you do, please send me email so we can fix 'em. Suggestions and code donations (i.e. C routines to be included in the VideoToolbox, possibly in modified form, with full attribution) are warmly appreciated. 
denis_pelli@isr.syr.edu

NOT MULTIFINDER FRIENDLY:
Walt Makous writes, "I ran Sandstorm by clicking on the icon for the application, interrupted it by clicking outside the window, and then resumed it by clicking on the window again.  This locks the keyboard so that the only way I can get back control is by using the programmer's switch." REPLY: Alas, I've never had any need to write polite applications that gracefully share the computer with other applications. Experiments always seem to deserve hogging it all. The Sandstorm demo allows you to invoke other applications, because it doesn't obscure the whole window, but it doesn't act like a good citizen in paying attention to the messages it gets from the Finder about what happened. (I would go ahead and make the demos multifinder-friendly if I knew how, but it seems inappropriate to learn just for the sake of the demos.) 

Good luck!

THE FINE PRINT:
Copyright ©1989-1993 Denis G. Pelli. The accompanying software is free; you may use it in your research and give it away to others, with the following restrictions. Any copy you give away must include this paragraph, unmodified, and any file that you have changed must include a note, added to HISTORY, giving your name, the date, and a description of the changes. This software may not be sold, whether in source or compiled form, without my permission. I hope you will find this software useful, but I can't promise that it will work for you, and am not offering any support. That's why it's free. I would appreciate reports of bugs and improvements.

SetMouse.c and HideMenuBar.c are copyrighted by SPLASH Resources. Their restrictions are reproduced in those files. FlushCacheRange.c (originally called Cache.c) is copyrighted by Apple Computer Corp. The compiled applications incorporate code copyrighted by others: Copyright © 1989 THINK Technologies, Inc. Certain portions of this software are copyrighted by THINK Technologies, Inc. Copyright © 1988 Cambridge University Press. The Numerical Recipes in C are copyrighted by Cambridge University Press.

DISCLAIMER (included at the request of the MacPsych archive):
The VideoToolbox is provided "as is" without warranty of any kind.  Denis Pelli, Syracuse University, SCiP, the operators of MacPsych, and St. Olaf College make no claims concerning the accuracy or correctness of the computer code contained in, or the results of the use of VideoToolbox.  The entire risk as to the results and performance of VideoToolbox is assumed by you. If the VideoToolbox is defective you, and not Denis Pelli, Syracuse University, SCiP, the operators of MacPsych, or St. Olaf College assume the entire cost of all necessary servicing, repair or correction.
