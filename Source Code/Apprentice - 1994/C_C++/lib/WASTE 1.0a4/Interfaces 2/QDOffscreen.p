unit QDOffscreen;{ Pascal Interface to the Macintosh Libraries }{ Copyright © 1985-1990 Apple Computer, Inc. }{ Non-Standard Version }{ ANTI© 1993 Merzwaren }interface	const{ new error codes }		cDepthErr = -157;   { invalid pixel depth }{ bit equates for the GWorld flags }		pixPurgeBit = 0;		noNewDeviceBit = 1;		useTempMemBit = 2;		keepLocalBit = 3;		pixelsPurgeableBit = 6;		pixelsLockedBit = 7;		mapPixBit = 16;		newDepthBit = 17;		alignPixBit = 18;		newRowBytesBit = 19;		reallocPixBit = 20;		clipPixBit = 28;		stretchPixBit = 29;		ditherPixBit = 30;		gwFlagErrBit = 31;{ bit masks for setting the above bits }		gwPixPurge = $00000001;		gwNoNewDevice = $00000002;		gwUseTempMem = $00000004;		gwKeepLocal = $00000008;		gwPixelsPurgeable = $00000040;		gwPixelsLocked = $00000080;		gwMapPix = $00010000;		gwNewDepth = $00020000;		gwAlignPix = $00040000;		gwNewRowBytes = $00080000;		gwReallocPix = $00100000;		gwClipPix = $10000000;		gwStretchPix = $20000000;		gwDitherPix = $40000000;		gwFlagErr = $80000000;	type		GWorldFlags = LongInt;		GWorldPtr = CGrafPtr;	function NewGWorld (var offscreenGWorld: GWorldPtr;									PixelDepth: INTEGER;									boundsRect: Rect;									cTable: CTabHandle;									aGDevice: GDHandle;									flags: GWorldFlags): QDErr;	inline		$203C, $0016, $0000, $AB1D;	function LockPixels (pm: PixMapHandle): BOOLEAN;	inline		$203C, $0004, $0001, $AB1D;	procedure UnlockPixels (pm: PixMapHandle);	inline		$203C, $0004, $0002, $AB1D;	function UpdateGWorld (var offscreenGWorld: GWorldPtr;									pixelDepth: INTEGER;									boundsRect: Rect;									cTable: CTabHandle;									aGDevice: GDHandle;									flags: GWorldFlags): GWorldFlags;	inline		$203C, $0016, $0003, $AB1D;	procedure DisposeGWorld (offscreenGWorld: GWorldPtr);	inline		$203C, $0004, $0004, $AB1D;	procedure GetGWorld (var port: CGrafPtr;									var gdh: GDHandle);	inline		$203C, $0008, $0005, $AB1D;	procedure SetGWorld (port: CGrafPtr;									gdh: GDHandle);	inline		$203C, $0008, $0006, $AB1D;	procedure CTabChanged (ctab: CTabHandle);	inline		$203C, $0004, $0007, $AB1D;	procedure PixPatChanged (ppat: PixPatHandle);	inline		$203C, $0004, $0008, $AB1D;	procedure PortChanged (port: GrafPtr);	inline		$203C, $0004, $0009, $AB1D;	procedure GDeviceChanged (gdh: GDHandle);	inline		$203C, $0004, $000A, $AB1D;	procedure AllowPurgePixels (pm: PixMapHandle);	inline		$203C, $0004, $000B, $AB1D;	procedure NoPurgePixels (pm: PixMapHandle);	inline		$203C, $0004, $000C, $AB1D;	function GetPixelsState (pm: PixMapHandle): GWorldFlags;	inline		$203C, $0004, $000D, $AB1D;	procedure SetPixelsState (pm: PixMapHandle;									state: GWorldFlags);	inline		$203C, $0008, $000E, $AB1D;	function GetPixBaseAddr (pm: PixMapHandle): Ptr;	inline		$203C, $0004, $000F, $AB1D;	function NewScreenBuffer (globalRect: Rect;									purgeable: BOOLEAN;									var gdh: GDHandle;									var offscreenPixMap: PixMapHandle): QDErr;	inline		$203C, $000E, $0010, $AB1D;	procedure DisposeScreenBuffer (offscreenPixMap: PixMapHandle);	inline		$203C, $0004, $0011, $AB1D;	function GetGWorldDevice (offscreenGWorld: GWorldPtr): GDHandle;	inline		$203C, $0004, $0012, $AB1D;	function QDDone (port: GrafPtr): BOOLEAN;	inline		$203C, $0004, $0013, $AB1D;	function OffscreenVersion: LONGINT;	inline		$7014, $AB1D;	function NewTempScreenBuffer (globalRect: Rect;									purgeable: BOOLEAN;									var gdh: GDHandle;									var offscreenPixMap: PixMapHandle): QDErr;	inline		$203C, $000E, $0015, $AB1D;	function PixMap32Bit (pmHandle: PixMapHandle): BOOLEAN;	inline		$203C, $0004, $0016, $AB1D;	function GetGWorldPixMap (offscreenGWorld: GWorldPtr): PixMapHandle;	inline		$203C, $0004, $0017, $AB1D;implementationend.