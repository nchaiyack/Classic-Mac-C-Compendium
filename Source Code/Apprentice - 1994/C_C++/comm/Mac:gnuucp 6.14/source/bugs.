Sun uucp sends a "dc" long packet after receiving a file but before
sending the "CY" or "CN" packet.  Why?  It's not documented...
(we cope)

Make it terminate under fewer conditions -- go around a few more times.

Make gnuucp use a short timeout and re-transmit its last packet,
rather than using the long "give up" timeout only.  Currently we are
depending on uucp on the other end to time out and retransmit to
joggle our elbow.

Logging stuffs whole command packet out there.

Logging needs work for failed xfers, see what uucp does.

Logging needs work for dropped connections, ditto....

Uuslave should exec uuxqt when it's done a single connection.

-----

Feature requests:

Needs real dialer support.  The current "support" is just a quick
hack to get it running.  I plan to do this one myself by adding a
real language for chat scripts, with looping, case statements,
functions, timeouts, and such.  This will be usable both for
interfacing with the modem, and for logging in to the remote system, as
well as the steps (like e.g. PC Pursuit or port selectors) in between.

Find or write public domain programs that implement:
	uuxqt -- execute the commands in received X. files, e.g. rmail, rnews
	uuclean -- clean out the queues of old stuff
	uucp -- queue up a file copying operation
	uux -- queue up a "remote command execution" operation
	uuls -- list the queue (this one is probably PD)
	uusnap -- snapshot the queue (is this PD?  Who wrote it?)

Implement a window size greater than 1, for effective use of the phone
bandwidth.  This requires being able to receive while you are sending,
which may require odd stuff on many micros.

Improve the logging, so a human can actually see what gnuucp is doing.
Currently it's set up to match what uucp does, which is horrible.
But doing it this way doesn't break old awk scripts that parse the
uucp logs.

Instrument gnuucp so it records in the logs how many packet retransmissions
it saw, how long each file transfer took and how many bytes were moved,
how much total time from start to finish, and total number of bytes
moved start to finish, and other interesting numbers.  This kind of data
is vital for improving the speed of gnuucp.

Profile gnuucp and see where it is spending most of its time.  Fix up
those parts to make it run faster and take less system resources.
I know the first place to look on the Unix version -- xgetc().
