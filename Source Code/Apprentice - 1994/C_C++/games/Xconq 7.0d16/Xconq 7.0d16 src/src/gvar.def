/* Definitions of global variables. */DEF_VAR_L("action-messages", g_action_messages, set_g_action_messages,	"Text to use in describing actions and their outcomes",	gactionmessages, NULL)DEF_VAR_I("actions-are-buffered", g_actions_buffered, set_g_actions_buffered,	"",	gactionsbuffered, 0, 0, 1)DEF_VAR_I("advantage-default", g_advantage_default, set_g_advantage_default,	"The default advantage of each side",	gadvantagedefault, 1, 1, 9999)DEF_VAR_I("advantage-max", g_advantage_max, set_g_advantage_max,	"The maximum advantage that a player can request",	gadvantagemax, 0, 0, 9999)DEF_VAR_I("advantage-min", g_advantage_min, set_g_advantage_min,	"The minimum advantage that a player can request",	gadvantagemin, 1, 1, 9999)DEF_VAR_I("alt-blob-density", g_alt_blob_density, set_g_alt_blob_density,	"",	galtblobdensity, 0, 500, 9999)DEF_VAR_I("alt-blob-height", g_alt_blob_height, set_g_alt_blob_height,	"",	galtblobheight, 0, 1000, 9999)DEF_VAR_I("alt-blob-size", g_alt_blob_size, set_g_alt_blob_size,	"",	galtblobsize, 0, 30, 9999)DEF_VAR_I("alt-smoothing", g_alt_smoothing, set_g_alt_smoothing,	"Number of averaging steps to do on terrain",	galtsmoothing, 0, 2, 9999)DEF_VAR_L("calendar", g_calendar, set_g_calendar,	"The calendar in use",	gcalendar, NULL)DEF_VAR_L("calendar-part-names", g_calendar_part_names, set_g_calendar_part_names,	"Names to use for time intervals in the calendar",	gcalendarpartnames, NULL)DEF_VAR_I("country-radius-max", g_radius_max, set_g_radius_max,	"The maximum radius of each side's home country",	gradiusmax, 0, 0, 9999)DEF_VAR_I("country-radius-min", g_min_radius, set_g_min_radius,	"The default radius of each side's home country, in hexes",	gradiusmin, -1, -1, 9999)DEF_VAR_I("country-separation-max", g_max_separation, set_g_max_separation,	"The maximum separation between countries",	gmaxseparation, -1, -1, 9999)DEF_VAR_I("country-separation-min", g_min_separation, set_g_min_separation,	"The minimum distance from each country to some other",	gminseparation, 0, 0, 9999)DEF_VAR_I("edge-terrain", g_edge_terrain, set_g_edge_terrain,	"The type of terrain that goes around the edge of the world",	gedgeterrain, 0, 0, MAXTTYPES)DEF_VAR_I("elapsed-real-time", g_elapsed_time, set_g_elapsed_time,	"Amount of real time in the game so far, in seconds",	gelapsedtime, 0, 0, 0)DEF_VAR_L("event-messages", g_event_messages, set_g_event_messages,	"",	geventmessages, NULL)DEF_VAR_I("extra-turn-chance", g_extra_turn, set_g_extra_turn,	"",	gextraturn, 0, 0, 99)DEF_VAR_L("feature-namers", g_feature_namers, set_g_feature_namers,	"definitions of namers of geographical features",	gfeaturenamers, NULL)DEF_VAR_L("feature-types", g_feature_types, set_g_feature_types,	"definitions of types of geographical features",	gfeaturetypes, NULL)DEF_VAR_S("grid-color", g_grid_color, set_g_grid_color,	"The name of the color representing grid terrain",	ggridcolor, "")DEF_VAR_I("growth-stop-chance", g_growth_stop, set_g_growth_stop,	"",	ggrowthstop, 0, 0, 100)DEF_VAR_S("initial-date", g_base_date, set_g_base_date,	"The date of the first turn",	gbasedate, "")DEF_VAR_I("initial-day-part", g_initial_day_part, set_g_initial_day_part,	"",	ginitialdaypart, 0, 0, 9999)DEF_VAR_I("initial-year-part", g_initial_year_part, set_g_initial_year_part,	"",	ginitialyearpart, 0, 0, 9999)DEF_VAR_I("last-turn", g_last_turn, set_g_last_turn,	"",	glastturn, 1, 9999, 9999)DEF_VAR_I("maze-passage-density", g_maze_passage, set_g_maze_passage,	"density of passages in a maze",	mazepassages, 0, 50, 100)DEF_VAR_I("maze-room-density", g_maze_room, set_g_maze_room,	"density of rooms in a maze",	mazerooms, 0, 50, 100)DEF_VAR_L("player-mix-default", g_player_mix_dflt, set_g_player_mix_dflt,	"The normal mix of player types",	playermixdflt, NULL)DEF_VAR_L("player-mix-required", g_player_mix_reqd, set_g_player_mix_reqd,	"The required mix of player types",	gplayermixreqd, NULL)DEF_VAR_I("player-sides-locked", g_player_sides_locked, set_g_player_sides_locked,	"True when player-side assignments can't be changed",	gplayersideslocked, 0, 0, 1)DEF_VAR_L("random-events", g_random_events, set_g_random_events,	"",	grandomevents, NULL)DEF_VAR_I("random-state", g_random_state, set_g_random_state,	"",	grandomstate, -1, -1, 32767)DEF_VAR_I("real-time-for-game", g_rt_for_game, set_g_rt_for_game,	"Total real time that the game may last",	grtforgame, 0, 0, 999999)DEF_VAR_I("real-time-per-side", g_rt_per_side, set_g_rt_per_side,	"",	grtperside, 0, 0, 999999)DEF_VAR_I("real-time-per-turn", g_rt_per_turn, set_g_rt_per_turn,	"",	grtperturn, 0, 0, 999999)DEF_VAR_I("river-sink-terrain", g_river_sink_terrain, set_g_river_sink_terrain,	"The terrain type of a cell completely surrounded by river",	griversinkterrain, 0, NONTTYPE, 0)DEF_VAR_S("scorefile-name", g_scorefile_name, set_g_scorefile_name,	"",	gscorefilename, "")DEF_VAR_I("see-all", g_see_all, set_g_see_all,	"True if everything is always seen all the time",	gseeall, 0, 0, 1)DEF_VAR_I("see-terrain-always", g_see_terrain_always, set_g_see_terrain_always,	"True if terrain is always seen all the time",	gseeterrainalways, 0, 1, 1)DEF_VAR_I("see-weather-always", g_see_weather_always, set_g_see_weather_always,	"True if weather is always seen all the time",	gseeweatheralways, 0, 1, 1)DEF_VAR_I("self-required", g_self_required, set_g_self_required,	"Collection of possible sides for players",	gselfrequired, 0, 0, 1)DEF_VAR_L("side-library", g_side_lib, set_g_side_lib,	"",	gsidelib, set_g_side_lib_default)DEF_VAR_I("sides-max", g_sides_max, set_g_sides_max,	"The maximum number of sides in a game",	gsidesmax, 1, MAXSIDES, MAXSIDES)DEF_VAR_I("sides-min", g_sides_min, set_g_sides_min,	"The minimum number of sides in a game",	gsidesmin, 1, 2, MAXSIDES)DEF_VAR_L("synthesis-methods", g_synth_methods, set_g_synth_methods,	"List of synthesis methods to run during init",	gsynthmethods, set_g_synth_methods_default)DEF_VAR_L("temperature-at-midsummer", g_temp_summer, set_g_temp_summer,	"",	gtempsummer, NULL)DEF_VAR_L("temperature-at-midwinter", g_temp_winter, set_g_temp_winter,	"",	gtempwinter, NULL)DEF_VAR_I("temperature-floor", g_temp_floor, set_g_temp_floor,	"",	gtempfloor, -9999, 0, 9999)DEF_VAR_I("temperature-floor-elevation", g_temp_floor_elev, set_g_temp_floor_elev,	"",	gtempfloorelev, -9999, 0, 9999)DEF_VAR_I("temperature-moderation-range", g_temp_mod_range, set_g_temp_mod_range,	"How far to go in averaging temperature variations",	gtempmodrange, 0, 0, 2)DEF_VAR_I("terrain-seen", g_terrain_seen, set_g_terrain_seen,	"True if the world's terrain is all completely known",	gterrainseen, 0, FALSE, 1)DEF_VAR_I("turn", g_turn, set_g_turn,	"the current turn",	curturn, 0, 0, 32767)DEF_VAR_I("units-in-game-max", g_units_in_game_max, set_g_units_in_game_max,	"A limit on the total number of units at any time in the game",	gunitsingamemax, -1, -1, 9999)DEF_VAR_I("units-per-side-max", g_units_per_side, set_g_max_units_per_side,	"A limit on the total number of units on each side",	gunitspersidemax, -1, -1, 9999)DEF_VAR_S("unseen-char", g_unseen_char, set_g_unseen_char,	"The name of the char representing unseen terrain",	gunseenchar, " ")DEF_VAR_S("unseen-color", g_unseen_color, set_g_unseen_color,	"The name of the color representing unseen terrain",	gunseencolor, "")DEF_VAR_S("unseen-image-name", g_unseen_image_name, set_g_unseen_image_name,	"The name of the image representing unseen terrain",	gunseenimagename, "")DEF_VAR_I("use-side-priority", g_use_side_priority, set_g_use_side_priority,	"",	gusesidepriority, 0, 0, 1)DEF_VAR_I("wet-blob-density", g_wet_blob_density, set_g_wet_blob_density,	"",	gwetblobdensity, 0, 100, 9999)DEF_VAR_I("wet-blob-height", g_wet_blob_height, set_g_wet_blob_height,	"",	gwetblobheight, 0, 100, 9999)DEF_VAR_I("wet-blob-size", g_wet_blob_size, set_g_wet_blob_size,	"",	gwetblobsize, 0, 100, 9999)DEF_VAR_I("wet-smoothing", g_wet_smoothing, set_g_wet_smoothing,	"",	gwetsmoothing, 0, 2, 9999)DEF_VAR_I("wind-mix-range", g_wind_mix_range, set_g_wind_mix_range,	"How far to go in averaging wind variations",	gwindmixrange, 0, 0, 2)