\input texinfo@setfilename xconq.info@c To produce just the player's guide, @clear DESIGNING and HACKING.@set DESIGNING@set HACKING@c @clear DESIGNING@c @clear HACKING@settitle Xconq@setchapternewpage odd@ifinfoThis file documents the strategy game Xconq.@end ifinfo@titlepage@sp 6@center @titlefont{Xconq}@sp 4@center The Penultimate Strategy Game@sp 4@center Version 7.0@sp 4@center November 1993@sp 5@center Stanley T. Shebs@page@vskip 0pt plus 1filllCopyright @copyright{} 1987-1993 Stanley T. Shebs@end titlepage@iftex@headings off@everyheading @thistitle @| @thischapter @| @thispage@everyfooting DRAFT d16 @| @today{} @| DRAFT d16@end iftex@node Top, Acknowledgments, (dir), (dir)@chapter Xconq, the Penultimate Strategy GameWelcome to @i{Xconq}!@i{Xconq} is a powerful multi-player game system.With @i{Xconq} you can build empires, fight wars, relive history,and adventure across fantastic worlds. You can play computerized board games,or be Godzilla rampaging through Tokyo.@i{Xconq} runs on many computer systems.It includes several different user interfaces,including Unix(tm) terminal graphics (``curses''),the X Window System, and the Apple Macintosh(tm).Although all share the same basic design,the ``look and feel'' of each interface matches the system you're on.The details of a particular @i{Xconq} game depend heavily onits @i{game design}, which defines the pieces in the game and itsrules of play.  So to understand everything about a game you're playing,you need three sources of information: this manual, which covers allgeneral information; documentation for the user interface; and\documentation for the game design in effect.  Although this soundslike a lot,most games don't use every feature of @i{Xconq},and the user interfaces will usually offer plenty ofonline guidance.@section About This ManualThe remainder of this chapter discusses compability witholder versions of @i{Xconq}, and additional informationresources.Chapter 2, ``Playing Xconq'' is the player's guide.It describes the general concepts shared by all the@i{Xconq} games.Chapter 3, ``Designing Games with Xconq'' is a designer'sguide for building and modifying @i{Xconq} game designs,using both Game Design Language (GDL) and online editing tools.Chapter 4, ``Reference Manual'' is the complete definitionof GDL.  It includes the syntax and semantics of allparts of the language.Chapter 5, ``Hacking Xconq'' describes the general architectureof @i{Xconq}, and how to extend the basic program.This chapter also includes a rationale for the major designdecisions, and some ideas for future development.@section Compatibility@i{Xconq} version 7 is not directly compatible with earlier versions,although most of the basic game concepts remain unchanged.If you've played @i{Xconq} before, you should have little troublegetting used to the differences.If you've designed any games (periods, maps, or scenarios)for version 5, you will discover many changes.Earlier versions of @i{Xconq}used a mix of crude fixed-format syntax and a simple postfix languagefor game designs (which were then called ``periods'').This version has changed too radically to be able to readany of the old period, map, or scenario files.For instance, version 7 eliminates the formal distinctionsbetween ``period'', ``map'', and ``scenario''.Therefore, if you have old @i{Xconq} files,you should invest the time to convert.You may even discover that some of the new features of @i{Xconq} providea better solution to your design problems.(The C-shell scripts @code{per2game}, @code{map2game}, and@code{scn2game} will help you get started on conversion;you can find them in the @code{misc} directory.)@section Where to Get Game Designs@i{Xconq} is not useful without game designs to drive it.The library distributed with @i{Xconq}includes many designs, some inherited from previous releasesand others that are entirely new.You are encouraged both to modify any of the existing game designsand to develop your own.  Chapter 3, ``Designing Games with Xconq'',includes a complete tutorial on how to do this.An important change for version 7 is that game design isconsiderably safer and easier than in the past,so if you've been discouraged by mysterious crashes before,you might want to try this version instead.@section For More InformationThere is a mailing list @code{xconq@@uunet.uu.net}.  To get on it, send yourrequest to @code{xconq-request@@uunet.uu.net}.The ftp server @code{ftp.uu.net} usually has a latest version of @i{Xconq},as well as other contributed material.Other servers also have copies of @i{Xconq}; the various ``Archie'' serversare the best way to get up-to-date information.  See your local Internetwizard if you don't know how to use any of these things.@node Acknowledgments, Playing Xconq, Top, Top@section AcknowledgmentsSince the first release of @i{Xconq} in 1987, it has benefited from the workand ideas of literally hundreds of people, first at the University of Utah,then worldwide.Special thanks must go to Eric Muehle,a tireless source of ideas, advice, and playtesting at Utah,Greg Fisher, who added many good things to make 5.4,and Robert Forsman, who did a great deal of work for 5.5.Eric Ziegast and Alan Clegg have been essential to maintainingthe @i{Xconq} mailing list and archives.Other contributors have been (in alphabetical order):Jim Anderson,Mark Bradakis,Alain Brossard,Massimo Campostrini,Germano Caronni,Harold Carr,Ben Chase,Chris Christensen,Kevin Deford,Fred Douglis,David Harr,Scott Herod,Eiji(``A.J.'') Hirai,Kurt Hoyt,Jeff Kelley,Bob Kessler,Jed Krohnfeldt,Rick Ledoux,Brian Lewis,Sandra Loosemore,Michael Lounsbery,Eric Mehlhaff,Jimmy Miklavcic,Tim Moore,Scott Mueller,Julian Onions,Dave Pare,Chris Peterson,Mohammad Pourheidari,Dan Reading,Tom Richards,Joel Rives,Jay Scott,John Shovic,Josh Siegel,Leigh Stoller,Ravi Subrahmanyam,Cimarron Taylor,Spencer Thomas,John Tonry,Rich van Gaasbeeck,Grant Weiler,Jeff Young,and many others.Thanks also to the University of Utah, Apple Computer, Inc.,and Cygnus Support, who have allcontributed machine resources that helped in thedevelopment of @i{Xconq}.@include play.texi@ifset DESIGNING@include design.texi@include refman.texi@end ifset@ifset HACKING@include hacking.texi@end ifset@node Glossary, Form Index, Porting Xconq, Top@include glossary.texi@ifset DESIGNING@include syntax.texi@appendix Index@printindex fn@end ifset@contents@bye